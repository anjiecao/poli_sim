plot(x, dbeta(x, shape1 = 200,shape2 = 400))
plot(x, dbeta(x, shape1= 20, shape2 = 400))
prior <- c(1,1,1,1)
n <- 15
model <- tibble(trials = 0:n,
bin1 = 0,
bin2 = 0,
bin3 = 0,
bin4 = 0)
# set the prior
model[1,2:5] <- as.list(prior)
for (i in 1:length(sample_seq)) {
model[model$trials == i, 2:5] <- model[model$trials == i-1, 2:5]
model[model$trials == i, sample_seq[i]+1] <-
model[model$trials == i-1, sample_seq[i]+1] + 1
}
# i = 1
model
library(magrittr)
model %<>%
rowwise() %>%
mutate(total = sum(bin1 + bin2 + bin3 + bin4),
p1 = bin1 / total,
p2 = bin2 / total,
p3 = bin3 / total,
p4 = bin4 / total)
model$observed <- c(NA, sample_seq)
library(tidyverse)
library(permute)
#sample_seq <- rep(1:4, 4)[shuffle(1:15)]
sample_seq <- c(1,1,3,4,1,1,4,1,2,1,1,4)
x = seq(0,1,.01)
# shape parameters are the number of counts
plot(x, dbeta(x, shape1 = 200,shape2 = 400))
plot(x, dbeta(x, shape1= 20, shape2 = 400))
prior <- c(1,1,1,1)
n <- 12
model <- tibble(trials = 0:n,
bin1 = 0,
bin2 = 0,
bin3 = 0,
bin4 = 0)
# set the prior
model[1,2:5] <- as.list(prior)
for (i in 1:length(sample_seq)) {
model[model$trials == i, 2:5] <- model[model$trials == i-1, 2:5]
model[model$trials == i, sample_seq[i]+1] <-
model[model$trials == i-1, sample_seq[i]+1] + 1
}
# i = 1
model
library(magrittr)
model %<>%
rowwise() %>%
mutate(total = sum(bin1 + bin2 + bin3 + bin4),
p1 = bin1 / total,
p2 = bin2 / total,
p3 = bin3 / total,
p4 = bin4 / total)
model$observed <- c(NA, sample_seq)
model
model$surprisal <- 0
for (i in 1:length(sample_seq)){
curr_bin = sample_seq[i]
curr_bin_column = paste0("p", curr_bin)
prev_probabiliy = model %>%
filter(trials == i-1) %>%
select(curr_bin_column) %>%
pull()
curr_suprirsal = -log2(prev_probabiliy)
model[model$trials == i, ]$surprisal <- curr_suprirsal
}
model$surprisal <- NA
for (i in 1:(n+1)) {
p_lasttrial <- c(model$p1[i-1], model$p2[i-1], model$p3[i-1], model$p4[i-1])
model$surprisal[i] <- -log2( p_lasttrial[model$observed[i]]  )
}
model
model$predictability <- NA_real_
for (i in 1:(n+1)){
current_trial_predict = model %>%
filter(trials == i) %>%
select(p1,p2,p3,p4) %>%
pivot_longer(p1:p4, names_to = "prob") %>%
mutate(log2_value = log2(value),
product = value * log2_value) %>%
summarise(sum(product)) %>%
pull()
model[model$trials == i, ]$predictability <- current_trial_predict
}
model
model$learning_progress <- NA_real_
for (i in 1:(n+1)){
#i = 1
previous_trial_bin <- model %>%
filter(trials == i-1) %>%
select(bin1:bin4) %>%
pivot_longer(bin1:bin4, names_to = "bin", values_to = "prev_bin")
current_trial_bin <- model %>%
filter(trials == i) %>%
select(bin1:bin4) %>%
pivot_longer(bin1:bin4, names_to = "bin", values_to = "curr_bin")
trial_bin = left_join(previous_trial_bin,
current_trial_bin,
by = "bin")
current_trial_prob <- model %>%
filter(trials == i) %>%
select(p1:p4) %>%
rename(bin1 = p1, bin2 = p2, bin3 = p3, bin4 = p4) %>%
pivot_longer(bin1:bin4, names_to = "bin", values_to = "curr_prob")
trial_bin = left_join(trial_bin,
current_trial_prob,
by = "bin")
d_bin = trial_bin %>%
mutate(d_bin = curr_prob * log2(curr_bin/prev_bin)) %>%
summarise(sum(d_bin)) %>%
pull()
model[model$trials == i, ]$learning_progress <- d_bin
}
model
df.plot <- model %>%
select(trials, surprisal, predictability, learning_progress) %>%
pivot_longer(cols = c("surprisal", "predictability", "learning_progress"),
names_to = "measure",
values_to = "value") %>%
filter(trials != 0)
surprise_plot <- df.plot %>%
filter(measure == "surprisal") %>%
ggplot(aes(x = trials, y = value)) +
geom_point() +
geom_line() +
ylab("surprise")
predictability_plot <- df.plot %>%
filter(measure == "predictability") %>%
ggplot(aes(x = trials, y = value)) +
geom_point() +
geom_line() +
ylab("predictability")
learning_progress_plot <- df.plot %>%
filter(measure == "learning_progress") %>%
ggplot(aes(x = trials, y = value)) +
geom_point() +
geom_line() +
ylab("learning_progress")
surprise_plot
predictability_plot
learning_progress_plot
predictability_plot <- df.plot %>%
filter(measure == "predictability") %>%
ggplot(aes(x = trials, y = value)) +
geom_point() +
geom_line() +
ylab("predictability") +
scale_x_continuous(breaks =c(2,4,6,8))
predictability_plot
df.plot <- model %>%
select(trials, surprisal, predictability, learning_progress) %>%
pivot_longer(cols = c("surprisal", "predictability", "learning_progress"),
names_to = "measure",
values_to = "value") %>%
filter(trials != 0)
surprise_plot <- df.plot %>%
filter(measure == "surprisal") %>%
ggplot(aes(x = trials, y = value)) +
geom_point() +
geom_line() +
ylab("surprise")
predictability_plot <- df.plot %>%
filter(measure == "predictability") %>%
ggplot(aes(x = trials, y = value)) +
geom_point() +
geom_line() +
ylab("predictability") +
scale_x_continuous(breaks =seq(1,12,1))
learning_progress_plot <- df.plot %>%
filter(measure == "learning_progress") %>%
ggplot(aes(x = trials, y = value)) +
geom_point() +
geom_line() +
ylab("learning_progress")
surprise_plot
predictability_plot
learning_progress_plot
df.plot <- model %>%
select(trials, surprisal, predictability, learning_progress) %>%
pivot_longer(cols = c("surprisal", "predictability", "learning_progress"),
names_to = "measure",
values_to = "value") %>%
filter(trials != 0)
surprise_plot <- df.plot %>%
filter(measure == "surprisal") %>%
ggplot(aes(x = trials, y = value)) +
geom_point() +
geom_line() +
ylab("surprise") +
scale_x_continuous(breaks =seq(1,12,1))
predictability_plot <- df.plot %>%
filter(measure == "predictability") %>%
ggplot(aes(x = trials, y = value)) +
geom_point() +
geom_line() +
ylab("predictability") +
scale_x_continuous(breaks =seq(1,12,1))
learning_progress_plot <- df.plot %>%
filter(measure == "learning_progress") %>%
ggplot(aes(x = trials, y = value)) +
geom_point() +
geom_line() +
ylab("learning_progress") +
scale_x_continuous(breaks =seq(1,12,1))
surprise_plot
predictability_plot
learning_progress_plot
i = 1
previous_trial_bin <- model %>%
filter(trials == i-1) %>%
select(bin1:bin4) %>%
pivot_longer(bin1:bin4, names_to = "bin", values_to = "prev_bin")
current_trial_bin <- model %>%
filter(trials == i) %>%
select(bin1:bin4) %>%
pivot_longer(bin1:bin4, names_to = "bin", values_to = "curr_bin")
trial_bin = left_join(previous_trial_bin,
current_trial_bin,
by = "bin")
current_trial_prob <- model %>%
filter(trials == i) %>%
select(p1:p4) %>%
rename(bin1 = p1, bin2 = p2, bin3 = p3, bin4 = p4) %>%
pivot_longer(bin1:bin4, names_to = "bin", values_to = "curr_prob")
trial_bin = left_join(trial_bin,
current_trial_prob,
by = "bin")
d_bin = trial_bin %>%
mutate(d_bin = curr_prob * log2(curr_bin/prev_bin)) %>%
summarise(sum(d_bin)) %>%
pull()
model[model$trials == i, ]$learning_progress <- d_bin
d_bin
trial_bin %>%
mutate(d_bin = curr_prob * log2(curr_bin/prev_bin)) %>%
summarise(sum(d_bin))
trial_bin %>%
mutate(d_bin = curr_prob * log2(curr_bin/prev_bin))
learning_progress_plot
library(tidyverse)
library(permute)
#sample_seq <- rep(1:4, 4)[shuffle(1:15)]
sample_seq <- c(1,1,3,4,1,1,4,1,2,1,1,4)
x = seq(0,1,.01)
# shape parameters are the number of counts
plot(x, dbeta(x, shape1 = 200,shape2 = 400))
plot(x, dbeta(x, shape1= 20, shape2 = 400))
prior <- c(1,1,1,1)
n <- 12
model <- tibble(trials = 0:n,
bin1 = 0,
bin2 = 0,
bin3 = 0,
bin4 = 0)
# set the prior
model[1,2:5] <- as.list(prior)
for (i in 1:length(sample_seq)) {
model[model$trials == i, 2:5] <- model[model$trials == i-1, 2:5]
model[model$trials == i, sample_seq[i]+1] <-
model[model$trials == i-1, sample_seq[i]+1] + 1
}
# i = 1
model
library(magrittr)
model %<>%
rowwise() %>%
mutate(total = sum(bin1 + bin2 + bin3 + bin4),
p1 = bin1 / total,
p2 = bin2 / total,
p3 = bin3 / total,
p4 = bin4 / total)
model$observed <- c(NA, sample_seq)
model
model$surprisal <- 0
for (i in 1:length(sample_seq)){
curr_bin = sample_seq[i]
curr_bin_column = paste0("p", curr_bin)
prev_probabiliy = model %>%
filter(trials == i-1) %>%
select(curr_bin_column) %>%
pull()
curr_suprirsal = -log2(prev_probabiliy)
model[model$trials == i, ]$surprisal <- curr_suprirsal
}
model$surprisal <- NA
for (i in 1:(n+1)) {
p_lasttrial <- c(model$p1[i-1], model$p2[i-1], model$p3[i-1], model$p4[i-1])
model$surprisal[i] <- -log2( p_lasttrial[model$observed[i]]  )
}
model
model$predictability <- NA_real_
for (i in 1:(n+1)){
current_trial_predict = model %>%
filter(trials == i) %>%
select(p1,p2,p3,p4) %>%
pivot_longer(p1:p4, names_to = "prob") %>%
mutate(log2_value = log2(value),
product = value * log2_value) %>%
summarise(sum(product)) %>%
pull()
model[model$trials == i, ]$predictability <- current_trial_predict
}
model
model$learning_progress <- NA_real_
for (i in 1:(n+1)){
i = 1
previous_trial_bin <- model %>%
filter(trials == i-1) %>%
select(bin1:bin4) %>%
pivot_longer(bin1:bin4, names_to = "bin", values_to = "prev_bin")
current_trial_bin <- model %>%
filter(trials == i) %>%
select(bin1:bin4) %>%
pivot_longer(bin1:bin4, names_to = "bin", values_to = "curr_bin")
trial_bin = left_join(previous_trial_bin,
current_trial_bin,
by = "bin")
current_trial_prob <- model %>%
filter(trials == i) %>%
select(p1:p4) %>%
rename(bin1 = p1, bin2 = p2, bin3 = p3, bin4 = p4) %>%
pivot_longer(bin1:bin4, names_to = "bin", values_to = "curr_prob")
trial_bin = left_join(trial_bin,
current_trial_prob,
by = "bin")
d_bin = trial_bin %>%
mutate(d_bin = curr_prob * log2(curr_bin/prev_bin)) %>%
summarise(sum(d_bin)) %>%
pull()
model[model$trials == i, ]$learning_progress <- d_bin
}
model
df.plot <- model %>%
select(trials, surprisal, predictability, learning_progress) %>%
pivot_longer(cols = c("surprisal", "predictability", "learning_progress"),
names_to = "measure",
values_to = "value") %>%
filter(trials != 0)
surprise_plot <- df.plot %>%
filter(measure == "surprisal") %>%
ggplot(aes(x = trials, y = value)) +
geom_point() +
geom_line() +
ylab("surprise") +
scale_x_continuous(breaks =seq(1,12,1))
predictability_plot <- df.plot %>%
filter(measure == "predictability") %>%
ggplot(aes(x = trials, y = value)) +
geom_point() +
geom_line() +
ylab("predictability") +
scale_x_continuous(breaks =seq(1,12,1))
learning_progress_plot <- df.plot %>%
filter(measure == "learning_progress") %>%
ggplot(aes(x = trials, y = value)) +
geom_point() +
geom_line() +
ylab("learning_progress") +
scale_x_continuous(breaks =seq(1,12,1))
surprise_plot
predictability_plot
learning_progress_plot
View(df.plot)
library(tidyverse)
library(permute)
#sample_seq <- rep(1:4, 4)[shuffle(1:15)]
sample_seq <- c(1,1,3,4,1,1,4,1,2,1,1,4)
x = seq(0,1,.01)
# shape parameters are the number of counts
plot(x, dbeta(x, shape1 = 200,shape2 = 400))
plot(x, dbeta(x, shape1= 20, shape2 = 400))
prior <- c(1,1,1,1)
n <- 12
model <- tibble(trials = 0:n,
bin1 = 0,
bin2 = 0,
bin3 = 0,
bin4 = 0)
# set the prior
model[1,2:5] <- as.list(prior)
for (i in 1:length(sample_seq)) {
model[model$trials == i, 2:5] <- model[model$trials == i-1, 2:5]
model[model$trials == i, sample_seq[i]+1] <-
model[model$trials == i-1, sample_seq[i]+1] + 1
}
# i = 1
model
library(magrittr)
model %<>%
rowwise() %>%
mutate(total = sum(bin1 + bin2 + bin3 + bin4),
p1 = bin1 / total,
p2 = bin2 / total,
p3 = bin3 / total,
p4 = bin4 / total)
model$observed <- c(NA, sample_seq)
model
model$surprisal <- 0
for (i in 1:length(sample_seq)){
curr_bin = sample_seq[i]
curr_bin_column = paste0("p", curr_bin)
prev_probabiliy = model %>%
filter(trials == i-1) %>%
select(curr_bin_column) %>%
pull()
curr_suprirsal = -log2(prev_probabiliy)
model[model$trials == i, ]$surprisal <- curr_suprirsal
}
model$surprisal <- NA
for (i in 1:(n+1)) {
p_lasttrial <- c(model$p1[i-1], model$p2[i-1], model$p3[i-1], model$p4[i-1])
model$surprisal[i] <- -log2( p_lasttrial[model$observed[i]]  )
}
model
model$predictability <- NA_real_
for (i in 1:(n+1)){
current_trial_predict = model %>%
filter(trials == i) %>%
select(p1,p2,p3,p4) %>%
pivot_longer(p1:p4, names_to = "prob") %>%
mutate(log2_value = log2(value),
product = value * log2_value) %>%
summarise(sum(product)) %>%
pull()
model[model$trials == i, ]$predictability <- current_trial_predict
}
model
model$learning_progress <- NA_real_
for (i in 1:(n+1)){
previous_trial_bin <- model %>%
filter(trials == i-1) %>%
select(bin1:bin4) %>%
pivot_longer(bin1:bin4, names_to = "bin", values_to = "prev_bin")
current_trial_bin <- model %>%
filter(trials == i) %>%
select(bin1:bin4) %>%
pivot_longer(bin1:bin4, names_to = "bin", values_to = "curr_bin")
trial_bin = left_join(previous_trial_bin,
current_trial_bin,
by = "bin")
current_trial_prob <- model %>%
filter(trials == i) %>%
select(p1:p4) %>%
rename(bin1 = p1, bin2 = p2, bin3 = p3, bin4 = p4) %>%
pivot_longer(bin1:bin4, names_to = "bin", values_to = "curr_prob")
trial_bin = left_join(trial_bin,
current_trial_prob,
by = "bin")
d_bin = trial_bin %>%
mutate(d_bin = curr_prob * log2(curr_bin/prev_bin)) %>%
summarise(sum(d_bin)) %>%
pull()
model[model$trials == i, ]$learning_progress <- d_bin
}
model
df.plot <- model %>%
select(trials, surprisal, predictability, learning_progress) %>%
pivot_longer(cols = c("surprisal", "predictability", "learning_progress"),
names_to = "measure",
values_to = "value") %>%
filter(trials != 0)
surprise_plot <- df.plot %>%
filter(measure == "surprisal") %>%
ggplot(aes(x = trials, y = value)) +
geom_point() +
geom_line() +
ylab("surprise") +
scale_x_continuous(breaks =seq(1,12,1))
predictability_plot <- df.plot %>%
filter(measure == "predictability") %>%
ggplot(aes(x = trials, y = value)) +
geom_point() +
geom_line() +
ylab("predictability") +
scale_x_continuous(breaks =seq(1,12,1))
learning_progress_plot <- df.plot %>%
filter(measure == "learning_progress") %>%
ggplot(aes(x = trials, y = value)) +
geom_point() +
geom_line() +
ylab("learning_progress") +
scale_x_continuous(breaks =seq(1,12,1))
surprise_plot
predictability_plot
learning_progress_plot
i = 1
previous_trial_bin <- model %>%
filter(trials == i-1) %>%
select(bin1:bin4) %>%
pivot_longer(bin1:bin4, names_to = "bin", values_to = "prev_bin")
current_trial_bin <- model %>%
filter(trials == i) %>%
select(bin1:bin4) %>%
pivot_longer(bin1:bin4, names_to = "bin", values_to = "curr_bin")
trial_bin = left_join(previous_trial_bin,
current_trial_bin,
by = "bin")
current_trial_prob <- model %>%
filter(trials == i) %>%
select(p1:p4) %>%
rename(bin1 = p1, bin2 = p2, bin3 = p3, bin4 = p4) %>%
pivot_longer(bin1:bin4, names_to = "bin", values_to = "curr_prob")
trial_bin = left_join(trial_bin,
current_trial_prob,
by = "bin")
View(trial_bin)
