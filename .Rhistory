install.packages("permute")
library(tidyverse)
library(permute)
sample_seq <- rep(1:4, 4)[shuffle(1:15)]
sample_seq <- rep(1:4, 4)[shuffle(1:15)]
sample_seq
sample_seq <- rep(1:4, 4)[shuffle(1:15)]
sample_seq
rep(1:4, 4)
sample_seq <- rep(1:4, 4)[shuffle(1:15)]
sample_seq
rep(1:4, 4)
rep(1:4, 4)[shuffle(1:15)]
sample_seq <- rep(1:4, 4)[shuffle(1:15)]
sample_seq
x = seq(0,1,.01)
# shape parameters are the number of counts
plot(x, dbeta(x, 200,400))
x = seq(0,1,.01)
# shape parameters are the number of counts
plot(x, dbeta(x, 200,400))
?dbeta
x = seq(0,1,.01)
# shape parameters are the number of counts
plot(x, dbeta(x, 200,400))
plot(x, dbeta(x, 2,400))
x = seq(0,1,.01)
# shape parameters are the number of counts
plot(x, dbeta(x, shape1 = 200,shape2 = 400))
plot(x, dbeta(x, 2,400))
x = seq(0,1,.01)
# shape parameters are the number of counts
plot(x, dbeta(x, shape1 = 200,shape2 = 400))
plot(x, dbeta(x, shape1= 20,400))
prior <- c(1,1,1,1)
n <- 15
model <- tibble(trials = 0:n,
bin1 = 0,
bin2 = 0,
bin3 = 0,
bin4 = 0)
model[1,2:5] <- as.list(prior)
for (i in 1:length(sample_seq)) {
model[model$trials == i, 2:5] <- model[model$trials == i-1, 2:5]
model[model$trials == i, sample_seq[i]+1] <-
model[model$trials == i-1, sample_seq[i]+1] + 1
}
View(model)
n <- 15
model <- tibble(trials = 0:n,
bin1 = 0,
bin2 = 0,
bin3 = 0,
bin4 = 0)
n <- 15
model <- tibble(trials = 0:n,
bin1 = 0,
bin2 = 0,
bin3 = 0,
bin4 = 0)
model[1,2:5] <- as.list(prior)
View(model)
n <- 15
model <- tibble(trials = 0:n,
bin1 = 0,
bin2 = 0,
bin3 = 0,
bin4 = 0)
View(model)
model[1,2:5] <- as.list(prior)
i = 1
model[model$trials == i, 2:5] <- model[model$trials == i-1, 2:5]
i = 1
model[model$trials == i, 2:5] <- model[model$trials == i-1, 2:5]
model
i = 1
model[model$trials == i, 2:5] <- model[model$trials == i-1, 2:5]
model[model$trials == i, sample_seq[i]+1] <-  model[model$trials == i-1, sample_seq[i]+1] + 1
i = 1
model[model$trials == i, 2:5] <- model[model$trials == i-1, 2:5]
model[model$trials == i, sample_seq[i]+1] <-  model[model$trials == i-1, sample_seq[i]+1] + 1
model
i = 1
model[model$trials == i, 2:5] <- model[model$trials == i-1, 2:5]
model
model[model$trials == i, sample_seq[i]+1] <-  model[model$trials == i-1, sample_seq[i]+1] + 1
model
sample_seq[i]
sample_seq
sample_seq + 1
sample+seq[i]+1
sample_seq[i]+1
model[model$trials == i, sample_seq[i]+1]
model[model$trials == i-1, sample_seq[i]+1] + 1
est <- tibble(trials = 0:n,
bin1 = 0,
bin2 = 0,
bin3 = 0,
bin4 = 0)
# set the prior
est[1,2:5] <- as.list(prior)
# prob estimate
for (i in 1:length(sample_seq)) {
}
View(est)
View(est)
est <- tibble(trials = 0:n,
bin1 = 0,
bin2 = 0,
bin3 = 0,
bin4 = 0)
View(est)
sample_seq[i]
bin_at_trial_one <- sample_seq[i]
bin_at_trial_one
est[est$trials == i, ]
est[est$trials == i, ]
i
i = 1
bin_at_trial_one <- sample_seq[i]
est[est$trials == i, ]
est[est$trials == i, sample_seq[i] + 1]
# update the bin
est[est$trials == i, bin_at_trial_one + 1]
bin_at_trial_one
i = 1
model[model$trials == i, 2:5] <- model[model$trials == i-1, 2:5]
model
# left hand is to update the corresponding bin the stimuli appears in; +1 because of the header
# right hand is to
model[model$trials == i, sample_seq[i]+1] <-  model[model$trials == i-1, sample_seq[i]+1] + 1
est <- tibble(trials = 0:n,
bin1 = 0,
bin2 = 0,
bin3 = 0,
bin4 = 0)
# trial one
i = 1
# which bin does the stimulus appear in trial one?
bin_at_trial_one <- sample_seq[i]
# update the bin
est[est$trials == i, bin_at_trial_one + 1] <- est[est$trials == i-1,
bin_at_trial_one + 1] + 1
#after initial update
est
# prob estimate
for (i in 1:length(sample_seq)) {
appear_in = sample_seq[i]+1
}
View(est)
n <- 15
model <- tibble(trials = 0:n,
bin1 = 0,
bin2 = 0,
bin3 = 0,
bin4 = 0)
# set the prior
model[1,2:5] <- as.list(prior)
for (i in 1:length(sample_seq)) {
model[model$trials == i, 2:5] <- model[model$trials == i-1, 2:5]
model[model$trials == i, sample_seq[i]+1] <-
model[model$trials == i-1, sample_seq[i]+1] + 1
}
View(model)
i = 1
model_current =  model[model$trials == i, 2:5]
View(model_current)
model_current =  model[model$trials == i, 2:5]
model_last = model[model$trials == i-1, 2:5]
View(model_last)
model_current - model_last
model_current =  model[model$trials == i, 2:5]
model_initi = model[model$trials == 0, 2:5]
model_current - model_initi
total_num_observation = i
current_observation_bin = sample_seq[i]
total_num_observation
current_observation_bin
model_current =  model[model$trials == i, 2:5]
model_initi = model[model$trials == 0, 2:5]
model_current - model_initi
(model_current - model_initi)[current_observation_bin]
probablity = (number_of_time_appeared_in_the_bin + 1) / total_num_observation + 4
i = 1
total_num_observation = i
current_observation_bin = sample_seq[i]
model_current =  model[model$trials == i, 2:5]
model_initi = model[model$trials == 0, 2:5]
number_of_time_appeared_in_the_bin = (model_current - model_initi)[current_observation_bin]
probablity = (number_of_time_appeared_in_the_bin + 1) / total_num_observation + 4
View(probablity)
i = 1
total_num_observation = i
current_observation_bin = sample_seq[i]
model_current =  model[model$trials == i, 2:5]
model_initi = model[model$trials == 0, 2:5]
number_of_time_appeared_in_the_bin = (model_current - model_initi)[current_observation_bin]
probablity = (number_of_time_appeared_in_the_bin + 1) / (total_num_observation + 4)
View(probablity)
View(number_of_time_appeared_in_the_bin)
total_num_observation
prob_estimate <- tibble(trials = 0:n,
bin1 = 0,
bin2 = 0,
bin3 = 0,
bin4 = 0)
prob_estimate[model$trials == 0, 2:5]
prob_estimate[model$trials == i, 2:5]
prob_estimate[model$trials == i, current_observation_bin + 1]
prob_estimate[model$trials == i-1, current_observation_bin + 1] + probablity
prob_estimate <- tibble(trials = 0:n,
bin1 = 0,
bin2 = 0,
bin3 = 0,
bin4 = 0)
# set the prior
prob_estimate[1,2:5] <- as.list(prior)
for (i in 1:length(sample_seq)) {
total_num_observation = i
current_observation_bin = sample_seq[i]
model_current =  model[model$trials == i, 2:5]
model_initi = model[model$trials == 0, 2:5]
number_of_time_appeared_in_the_bin = (model_current - model_initi)[current_observation_bin]
# why is the first one not 0.25?
probablity = (number_of_time_appeared_in_the_bin + 1) / (total_num_observation + 4)
prob_estimate[model$trials == i, current_observation_bin + 1] = prob_estimate[model$trials == i-1, current_observation_bin + 1] + probablity
}
prob_estimate <- tibble(trials = 0:n,
bin1 = 0,
bin2 = 0,
bin3 = 0,
bin4 = 0)
# set the prior
prob_estimate[1,2:5] <- as.list(prior)
for (i in 1:length(sample_seq)) {
total_num_observation = i
current_observation_bin = sample_seq[i]
model_current =  model[model$trials == i, 2:5]
model_initi = model[model$trials == 0, 2:5]
number_of_time_appeared_in_the_bin = (model_current - model_initi)[current_observation_bin]
# why is the first one not 0.25?
probablity = (number_of_time_appeared_in_the_bin + 1) / (total_num_observation + 4)
prob_estimate[model$trials == i, current_observation_bin + 1] = prob_estimate[model$trials == i-1, current_observation_bin + 1] + probablity
}
prob_estimate
prob_estimate <- tibble(trials = 0:n,
bin1 = 0,
bin2 = 0,
bin3 = 0,
bin4 = 0)
# set the prior
prob_estimate[1,2:5] <- as.list(prior)
for (i in 1:length(sample_seq)) {
total_num_observation = i
current_observation_bin = sample_seq[i]
model_current =  model[model$trials == i, 2:5]
model_initi = model[model$trials == 0, 2:5]
number_of_time_appeared_in_the_bin = (model_current - model_initi)[current_observation_bin]
# why is the first one not 0.25?
probablity = (number_of_time_appeared_in_the_bin + 1) / (total_num_observation + 4)
# updating the posterior?
prob_estimate[model$trials == i] = prob_estimate[model$trials == i-1]
prob_estimate[model$trials == i, current_observation_bin + 1] = prob_estimate[model$trials == i-1, current_observation_bin + 1] + probablity
}
prob_estimate <- tibble(trials = 0:n,
bin1 = 0,
bin2 = 0,
bin3 = 0,
bin4 = 0)
# set the prior
prob_estimate[1,2:5] <- as.list(prior)
for (i in 1:length(sample_seq)) {
total_num_observation = i
current_observation_bin = sample_seq[i]
model_current =  model[model$trials == i, 2:5]
model_initi = model[model$trials == 0, 2:5]
number_of_time_appeared_in_the_bin = (model_current - model_initi)[current_observation_bin]
# why is the first one not 0.25?
probablity = (number_of_time_appeared_in_the_bin + 1) / (total_num_observation + 4)
# updating the posterior?
prob_estimate[model$trials == i, ] = prob_estimate[model$trials == i-1, ]
prob_estimate[model$trials == i, current_observation_bin + 1] = prob_estimate[model$trials == i-1, current_observation_bin + 1] + probablity
}
prob_estimate
prob_estimate <- tibble(trials = 0:n,
bin1 = 0,
bin2 = 0,
bin3 = 0,
bin4 = 0)
# set the prior
prob_estimate[1,2:5] <- as.list(prior)
for (i in 1:length(sample_seq)) {
total_num_observation = i
current_observation_bin = sample_seq[i]
model_current =  model[model$trials == i, 2:5]
model_initi = model[model$trials == 0, 2:5]
number_of_time_appeared_in_the_bin = (model_current - model_initi)[current_observation_bin]
# why is the first one not 0.25?
probablity = (number_of_time_appeared_in_the_bin + 1) / (total_num_observation + 4)
# updating the posterior?
prob_estimate[model$trials == i, 2:5] = prob_estimate[model$trials == i-1, 2:5]
prob_estimate[model$trials == i, current_observation_bin + 1] = prob_estimate[model$trials == i-1, current_observation_bin + 1] + probablity
}
prob_estimate
